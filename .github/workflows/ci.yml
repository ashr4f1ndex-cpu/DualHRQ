name: CI
on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10","3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        pip install -r lab_v10/requirements.txt
        pip install pytest pytest-cov pytest-xdist ruff mypy bandit
    - name: Ruff (lint & format check)
      run: |
        ruff check lab_v10/src --fix
        ruff format lab_v10/src --check
    - name: Mypy (non-blocking)
      run: mypy lab_v10/src --ignore-missing-imports || true
    - name: Bandit (non-blocking)
      run: bandit -r lab_v10/src -f json -o bandit-report.json || true
    - name: Unit tests (offline)
      run: |
        cd lab_v10
        pytest -v --cov=src --cov-report=term-missing --cov-report=xml -m "not integration"
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-artifacts-${{ matrix.python-version }}
        path: |
          lab_v10/coverage.xml
          bandit-report.json\n